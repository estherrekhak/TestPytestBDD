{"uid":"dcb6d3d57f8c6814","name":"test_add_item_to_cart[chrome1]","fullName":"tests.cart_test#test_add_item_to_cart","historyId":"19fe4a1d9c2f3db9684fbc8008e35fe3","time":{"start":1756423411063,"stop":1756423419150,"duration":8087},"status":"failed","statusMessage":"AssertionError","statusTrace":"browser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"08b5861080f477b500e07f71c3194ed4\")>\nbrowser_type = 'chrome'\n\n    def test_add_item_to_cart(browser, browser_type):\n        user_logged_in(browser, browser_type)\n        add_item_to_cart(browser, browser_type)\n>       cart_should_contain_item(browser, browser_type)\n\ntests\\cart_test.py:22: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nbrowser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"08b5861080f477b500e07f71c3194ed4\")>\nbrowser_type = 'chrome'\n\n    @then('the cart should contain the item')\n    def cart_should_contain_item(browser, browser_type):\n        \"\"\"\n        Step: Then the cart should contain the item\n        Feature: Add to cart\n        Maps to: add_to_cart.feature: Then the cart should contain the item\n        \"\"\"\n        inventory_page = InventoryPage(browser)\n        inventory_page.go_to_cart()\n        cart_page = CartPage(browser)\n        print(f\"DEBUG: Current URL after go_to_cart: {browser.current_url}\")\n        # Add assertion for item presence if needed\n>       assert '/cartFailure' in browser.current_url\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nE       AssertionError\n\nsteps\\cart_steps.py:47: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"browser","time":{"start":1756423408765,"stop":1756423411061,"duration":2296},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentStep":false,"attachmentsCount":0,"shouldDisplayMessage":false}],"testStage":{"status":"failed","statusMessage":"AssertionError","statusTrace":"browser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"08b5861080f477b500e07f71c3194ed4\")>\nbrowser_type = 'chrome'\n\n    def test_add_item_to_cart(browser, browser_type):\n        user_logged_in(browser, browser_type)\n        add_item_to_cart(browser, browser_type)\n>       cart_should_contain_item(browser, browser_type)\n\ntests\\cart_test.py:22: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nbrowser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"08b5861080f477b500e07f71c3194ed4\")>\nbrowser_type = 'chrome'\n\n    @then('the cart should contain the item')\n    def cart_should_contain_item(browser, browser_type):\n        \"\"\"\n        Step: Then the cart should contain the item\n        Feature: Add to cart\n        Maps to: add_to_cart.feature: Then the cart should contain the item\n        \"\"\"\n        inventory_page = InventoryPage(browser)\n        inventory_page.go_to_cart()\n        cart_page = CartPage(browser)\n        print(f\"DEBUG: Current URL after go_to_cart: {browser.current_url}\")\n        # Add assertion for item presence if needed\n>       assert '/cartFailure' in browser.current_url\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nE       AssertionError\n\nsteps\\cart_steps.py:47: AssertionError","steps":[],"attachments":[{"uid":"dae71ab936dafc36","name":"Screenshot_test_add_item_to_cart[chrome1]","source":"dae71ab936dafc36.png","type":"image/png","size":55176},{"uid":"65a3845f54f5e94e","name":"stdout","source":"65a3845f54f5e94e.txt","type":"text/plain","size":238}],"parameters":[],"stepsCount":0,"hasContent":true,"attachmentStep":false,"attachmentsCount":2,"shouldDisplayMessage":true},"afterStages":[{"name":"browser::0","time":{"start":1756423419292,"stop":1756423421574,"duration":2282},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentStep":false,"attachmentsCount":0,"shouldDisplayMessage":false}],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"cart_test"},{"name":"host","value":"Rekha"},{"name":"thread","value":"30060-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.cart_test"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"browser_type","value":"'chrome'"}],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"dcb6d3d57f8c6814.json","parameterValues":["'chrome'"]}